name: Build ARM64 wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ARM64]

    steps:
    - name: Cancel previous runs on the same branch
      if: ${{ github.ref != 'refs/heads/master' }}
      uses: styfle/cancel-workflow-action@0.7.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Prepare cibuildwheel
      run: |
        if [ ! -f "venv" ]; then rm -rf venv; fi
        sudo apt-get install python3-venv python3-pip -y
        python3 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install wheel

    - name: Build ${{ matrix.os }} wheels and test
      run: |
        pip wheel -w dist --no-deps .

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./dist

    - name: Test for secrets access
      id: check_secrets
      shell: bash
      run: |
        unset HAS_SECRET
        if [ -n "$SECRET" ]; then HAS_SECRET='true' ; fi
        echo ::set-output name=HAS_SECRET::${HAS_SECRET}
      env:
        SECRET: "${{ secrets.test_pypi_password }}"

    - name: Install twine
      run: |
        source venv/bin/activate
        pip install twine

    - name: Publish distribution to PyPI
      if: startsWith(github.event.ref, 'refs/tags') && steps.check_secrets.outputs.HAS_SECRET
      env:
        TWINE_USERNAME: __token__
        TWINE_NON_INTERACTIVE: 1
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
        source venv/bin/activate
        twine upload --non-interactive --skip-existing --verbose 'dist/*'

    - name: Publish distribution to Test PyPI
      if: steps.check_secrets.outputs.HAS_SECRET
      env:
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        TWINE_USERNAME: __token__
        TWINE_NON_INTERACTIVE: 1
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
      run: |
        source venv/bin/activate
        twine upload --non-interactive --skip-existing --verbose 'dist/*'

    - name: Clean up
      run: |
        rm -rf venv
        rm -rf dist
